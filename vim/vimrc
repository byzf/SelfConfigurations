""" " Settings
if &compatible
	set nocompatible
endif

set backspace=indent,eol,start
set history=200
set nobackup
set display=truncate
set noshowmode
set belloff=backspace,cursor,complete,esc,error
set vb t_vb=\|200f
set cursorline cursorlineopt=number
set linespace=2
set pythonthreedll=python38.dll
set clipboard=unnamed
set laststatus=2

set encoding=utf-8
set nu
set title
set nowrap
set ruler
set showcmd
set wildmenu
set shiftwidth=4 tabstop=4 softtabstop=0 smarttab noexpandtab
set incsearch ignorecase smartcase hlsearch
set shortmess+=c
set completeopt=menuone,noinsert,preview,noselect

""""" Packages
call plug#begin('~/vimfiles/.cache')
" colorschemes
Plug 'alessandroyorba/alduin'
Plug 'alessandroyorba/despacio'
Plug 'morhetz/gruvbox'
Plug 'jonathanfilip/vim-lucius'
Plug 'wolf-dog/nighted.vim'
Plug 'rakr/vim-one'
" apperance
Plug 'itchyny/lightline.vim'
Plug 'ryanoasis/vim-devicons'
Plug 'mhinz/vim-startify'
" function
Plug 'majutsushi/tagbar', { 'on' : 'TagbarToggle' }
Plug 'scrooloose/nerdtree',{ 'on':  'NERDTreeToggle' }
Plug 'Xuyuanp/nerdtree-git-plugin', { 'on': 'NERDTreeToggle' }
Plug 'junegunn/fzf',{ 'do': 'go get -u github.com/junegunn/fzf', 'on': 'FZF' }
Plug 'junegunn/fzf.vim', { 'on': 'FZF' }
Plug 'brooth/far.vim', { 'on': ['Far', 'F'] }
" complete
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-file.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'prabirshrestha/asyncomplete-ultisnips.vim'
" helper
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tommcdo/vim-lion'
Plug 'wellle/targets.vim'
Plug 'michaeljsmith/vim-indent-object'
Plug 'tpope/vim-repeat'
Plug 'lfv89/vim-interestingwords'
" language
Plug 'fatih/vim-go'

call plug#end()

let mapleader = "\\"
inoremap <M-o>       <C-o>o
inoremap <C-j>       <Down>
inoremap <C-k>       <Up>
inoremap <C-e>       <C-o><C-e>
inoremap <C-y>       <C-y><C-y>

""""" Coloscheme
colorscheme lucius
""""" Lightline
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ }

""""" Tabgar
nnoremap <silent> <F8> :TagbarToggle<CR>
""""" NerdTree
nnoremap <silent> <F12> :NERDTreeToggle<CR>
""""" Startify
let g:startify_custom_header_quotes = [
	\ ['Mi~'],
	\ ['Miao~'],
	\ ['Gu~'],
	\ ]
""""" Insterestingwords
let g:interestingWordsGUIColors = ['#8CCBEA', '#A4E57E', '#FFDB72', '#FF7272', '#FFB3FF', '#9999FF']

""""" Async complete
inoremap <expr> <Esc> pumvisible() ? asyncomplete#close_popup() : "\<Esc>"
inoremap <c-space> <Plug>(asyncomplete_force_refresh)
let g:asyncomplete_auto_completeopt = 0
""""" complete sources
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'whitelist': ['*'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))
call asyncomplete#register_source(asyncomplete#sources#ultisnips#get_source_options({
	\ 'name': 'ultisnips',
	\ 'whitelist': ['*'],
    \ 'priority': 0,
	\ 'completor': function('asyncomplete#sources#ultisnips#completor'),
	\ }))
"""""" snips
let g:UltiSnipsExpandTrigger="<c-l>"

